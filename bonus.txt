res6: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_11) (if0 (and (xor (shr1 (xor (if0 (shr4 (shr1 (or x_11 1))) 1 x_11) 1)) x_11) 1) (plus (not (not (if0 (plus (xor (shr16 x_11) x_11) 1) 1 x_11))) x_11) (not (shr16 (shr4 (plus (if0 (not (xor (shr1 x_11) x_11)) x_11 0) x_11)))))),WVuvdIJFH2Z5K5DLhANXKv5Y,43,List(bonus, and, if0, not, or, plus, shr1, shr16, shr4, xor))

res2: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_9) (if0 (and (plus (shl1 (shr4 x_9)) x_9) 1) (xor x_9 (shr1 (not (plus 1 x_9)))) (or 1 (shl1 (shr16 x_9))))),JIn30G6udsLieAwqtuqgB2vP,21,List(bonus, and, if0, not, or, plus, shl1, shr1, shr16, shr4, xor))
res8: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_14) (if0 (and (plus (shr1 (shr1 x_14)) x_14) 1) (or 1 (shl1 (and (shr4 x_14) 1))) (xor (plus x_14 1) 1))),gvfOnhGV4E0n1OUDIAAmJzRd,21,List(bonus, and, if0, or, plus, shl1, shr1, shr4, xor))
res10: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_14) (if0 (and (plus x_14 (shl1 (shl1 (and x_14 1)))) 1) (and (shl1 x_14) (shr16 x_14)) (xor 1 (plus x_14 x_14)))),Iv5yv8S80HBsffNsjwCIu6n8,21,List(bonus, and, if0, plus, shl1, shr16, xor))
res11: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_14) (if0 (and (plus x_14 (shl1 (shl1 (and x_14 1)))) 1) (and (shl1 x_14) (shr16 x_14)) (xor 1 (plus x_14 x_14)))),Iv5yv8S80HBsffNsjwCIu6n8,21,List(bonus, and, if0, plus, shl1, shr16, xor))
res13: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_5) (if0 (and (and 1 (shr16 (shr16 x_5))) 1) (plus (shr4 (shr16 x_5)) 1) (and (shr1 x_5) (and (shl1 x_5) x_5)))),8QXp5577X9CeGCjACNehyNqd,21,List(bonus, and, if0, plus, shl1, shr1, shr16, shr4))
res15: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_17) (if0 (and (or x_17 (shr16 (shr1 (shr4 (shr1 x_17))))) 1) (or (shl1 (not 1)) x_17) (xor (shl1 (or 1 (shr4 x_17))) x_17))),g1y6BB8hAxA2iNbedAfga0gJ,23,List(bonus, and, if0, not, or, shl1, shr1, shr16, shr4, xor))
res17: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_4) (if0 (and (and (shr1 (not x_4)) x_4) 1) (and x_4 (plus x_4 1)) (and (shr4 x_4) (plus (not x_4) (not 0))))),GP6l8AKu97GXA0IIKHfUlrBB,22,List(bonus, and, if0, not, plus, shr1, shr4))
res19: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_9) (if0 (and (plus (shl1 (shr4 x_9)) x_9) 1) (xor x_9 (shr1 (not (plus 1 x_9)))) (or 1 (shl1 (shr16 x_9))))),kxN6FFtoTD3fo8defWktY8FB,21,List(bonus, and, if0, not, or, plus, shl1, shr1, shr16, shr4, xor))
res21: net.virtualvoid.program.TrainingProblem = TrainingProblem((lambda (x_13) (if0 (and (or (shl1 (not 1)) x_13) 1) (or x_13 (shr4 (shr16 (plus x_13 x_13)))) (xor (shr16 (not (plus x_13 x_13))) x_13))),fWUgfg8D5iiSV93XsDYucV6p,23,List(bonus, and, if0, not, or, plus, shl1, shr16, shr4, xor))

(21,5,7,5)
(21,5,7,5)
(21,7,5,5)
(21,7,5,5)
(21,5,5,7)
(23,7,5,7)
(22,5,5,8)
(21,5,7,5)
(23,5,7,7)

TrainingProblem((lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (and (or x_15 (shr1 (not x_15))) 1) (xor (or 1 x_15) x_15))),4v6jkoyf6FiTATcT05JoYQ8b,23,List(bonus, and, if0, not, or, shl1, shr1, shr4, xor))
TrainingProblem((lambda (x_15) (if0 (and (or (not 1) (if0 x_15 1 x_15)) 1) (xor (plus x_15 1) 1) (and x_15 (plus x_15 x_15)))),apfgzsKDCyAI9gksHc0wEE09,21,List(bonus, and, if0, not, or, plus, xor))
TrainingProblem((lambda (x_4) (if0 (and (and (not (shr1 x_4)) (shr16 (not 0))) 1) (xor (plus 1 x_4) 1) (or (plus x_4 (not (shr16 x_4))) x_4))),AUFtWkCm16HxDwLrf0Sx96VL,23,List(bonus, and, if0, not, or, plus, shr1, shr16, xor))
TrainingProblem((lambda (x_17) (if0 (and (or x_17 (shr16 (shr1 (shr4 (shr1 x_17))))) 1) (or (shl1 (not 1)) x_17) (xor (shl1 (or 1 (shr4 x_17))) x_17))),QLuNTxWhkkeG3QfJMfLZoAgf,23,List(bonus, and, if0, not, or, shl1, shr1, shr16, shr4, xor))
TrainingProblem((lambda (x_9) (if0 (and (plus (shr16 (shr16 (shl1 x_9))) (shr16 x_9)) 1) (plus x_9 (shl1 (and (shr4 x_9) x_9))) (plus 1 (plus x_9 x_9)))),yDvL8M6pclo3cc4nBUPZdkkH,23,List(bonus, and, if0, plus, shl1, shr16, shr4))

(23,7,7,5)
(21,7,5,5)
(23,7,5,7)
(23,7,5,7)
(23,7,7,5)

TrainingProblem((lambda (x_11) (if0 (and (plus (or (not x_11) (shr4 x_11)) x_11) 1) (not (xor (shl1 1) (shr4 (shl1 x_11)))) (xor (shr16 (not (plus x_11 x_11))) x_11))),uHCrZqnrKMBm6HIMBlLwpNUg,25,List(bonus, and, if0, not, or, plus, shl1, shr16, shr4, xor))
TrainingProblem((lambda (x_4) (if0 (and (plus (shr16 (shr16 (shl1 x_4))) (shr16 x_4)) 1) (not (plus x_4 (not 1))) (and (not 1) (not x_4)))),hUUWUAUw5JAaqkh0RuNSCJfj,21,List(bonus, and, if0, not, plus, shl1, shr16))
TrainingProblem((lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (or (shr16 (shl1 x_15)) x_15) (xor (shr16 (shr16 x_15)) 1))),YOZhkIXLBYFKkVQldfhAgCRr,21,List(bonus, and, if0, not, or, shl1, shr16, shr4, xor))
TrainingProblem((lambda (x_11) (if0 (and (or (shr4 (shr4 x_11)) x_11) 1) (xor (or x_11 (plus x_11 x_11)) x_11) (plus (xor x_11 (plus 1 x_11)) x_11))),RJNLHIfvZl3FNAwx3AQw8ynr,23,List(bonus, and, if0, or, plus, shr4, xor))
TrainingProblem((lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (or (shr16 (shl1 x_15)) x_15) (xor (shr16 (shr16 x_15)) 1))),yvhzISnuMCcxHz9dxlZ8WcaA,21,List(bonus, and, if0, not, or, shl1, shr16, shr4, xor))

(25,7,7,7)
(21,7,5,5)
(21,7,5,5)
(23,5,7,7)
(21,7,5,5)

case class TrainingProblem(challenge: String, id: String, size: Int, operators: Seq[String]) {
res53.foreach { x =>
  import x._
  val s = s"""TrainingProblem(\"$challenge\", \"$id\", $size, Seq(${operators.map("\""+_+"\"").mkString(", ")}))"""
  println(s)
}

TrainingProblem("(lambda (x_11) (if0 (and (plus (or (not x_11) (shr4 x_11)) x_11) 1) (not (xor (shl1 1) (shr4 (shl1 x_11)))) (xor (shr16 (not (plus x_11 x_11))) x_11)))", "uHCrZqnrKMBm6HIMBlLwpNUg", 25, Seq("bonus", "and", "if0", "not", "or", "plus", "shl1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_4) (if0 (and (plus (shr16 (shr16 (shl1 x_4))) (shr16 x_4)) 1) (not (plus x_4 (not 1))) (and (not 1) (not x_4))))", "hUUWUAUw5JAaqkh0RuNSCJfj", 21, Seq("bonus", "and", "if0", "not", "plus", "shl1", "shr16"))
,TrainingProblem("(lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (or (shr16 (shl1 x_15)) x_15) (xor (shr16 (shr16 x_15)) 1)))", "YOZhkIXLBYFKkVQldfhAgCRr", 21, Seq("bonus", "and", "if0", "not", "or", "shl1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_11) (if0 (and (or (shr4 (shr4 x_11)) x_11) 1) (xor (or x_11 (plus x_11 x_11)) x_11) (plus (xor x_11 (plus 1 x_11)) x_11)))", "RJNLHIfvZl3FNAwx3AQw8ynr", 23, Seq("bonus", "and", "if0", "or", "plus", "shr4", "xor"))
,TrainingProblem("(lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (or (shr16 (shl1 x_15)) x_15) (xor (shr16 (shr16 x_15)) 1)))", "yvhzISnuMCcxHz9dxlZ8WcaA", 21, Seq("bonus", "and", "if0", "not", "or", "shl1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_9) (if0 (and (plus (shl1 (shr4 x_9)) x_9) 1) (xor x_9 (shr1 (not (plus 1 x_9)))) (or 1 (shl1 (shr16 x_9)))))", "JIn30G6udsLieAwqtuqgB2vP", 21, Seq("bonus", "and", "if0", "not", "or", "plus", "shl1", "shr1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_14) (if0 (and (plus (shr1 (shr1 x_14)) x_14) 1) (or 1 (shl1 (and (shr4 x_14) 1))) (xor (plus x_14 1) 1)))", "gvfOnhGV4E0n1OUDIAAmJzRd", 21, Seq("bonus", "and", "if0", "or", "plus", "shl1", "shr1", "shr4", "xor"))
,TrainingProblem("(lambda (x_14) (if0 (and (plus x_14 (shl1 (shl1 (and x_14 1)))) 1) (and (shl1 x_14) (shr16 x_14)) (xor 1 (plus x_14 x_14))))", "Iv5yv8S80HBsffNsjwCIu6n8", 21, Seq("bonus", "and", "if0", "plus", "shl1", "shr16", "xor"))
,TrainingProblem("(lambda (x_14) (if0 (and (plus x_14 (shl1 (shl1 (and x_14 1)))) 1) (and (shl1 x_14) (shr16 x_14)) (xor 1 (plus x_14 x_14))))", "Iv5yv8S80HBsffNsjwCIu6n8", 21, Seq("bonus", "and", "if0", "plus", "shl1", "shr16", "xor"))
,TrainingProblem("(lambda (x_5) (if0 (and (and 1 (shr16 (shr16 x_5))) 1) (plus (shr4 (shr16 x_5)) 1) (and (shr1 x_5) (and (shl1 x_5) x_5))))", "8QXp5577X9CeGCjACNehyNqd", 21, Seq("bonus", "and", "if0", "plus", "shl1", "shr1", "shr16", "shr4"))
,TrainingProblem("(lambda (x_17) (if0 (and (or x_17 (shr16 (shr1 (shr4 (shr1 x_17))))) 1) (or (shl1 (not 1)) x_17) (xor (shl1 (or 1 (shr4 x_17))) x_17)))", "g1y6BB8hAxA2iNbedAfga0gJ", 23, Seq("bonus", "and", "if0", "not", "or", "shl1", "shr1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_4) (if0 (and (and (shr1 (not x_4)) x_4) 1) (and x_4 (plus x_4 1)) (and (shr4 x_4) (plus (not x_4) (not 0)))))", "GP6l8AKu97GXA0IIKHfUlrBB", 22, Seq("bonus", "and", "if0", "not", "plus", "shr1", "shr4"))
,TrainingProblem("(lambda (x_9) (if0 (and (plus (shl1 (shr4 x_9)) x_9) 1) (xor x_9 (shr1 (not (plus 1 x_9)))) (or 1 (shl1 (shr16 x_9)))))", "kxN6FFtoTD3fo8defWktY8FB", 21, Seq("bonus", "and", "if0", "not", "or", "plus", "shl1", "shr1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_13) (if0 (and (or (shl1 (not 1)) x_13) 1) (or x_13 (shr4 (shr16 (plus x_13 x_13)))) (xor (shr16 (not (plus x_13 x_13))) x_13)))", "fWUgfg8D5iiSV93XsDYucV6p", 23, Seq("bonus", "and", "if0", "not", "or", "plus", "shl1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_15) (if0 (and (not (xor (shl1 1) (shr4 (shl1 x_15)))) 1) (and (or x_15 (shr1 (not x_15))) 1) (xor (or 1 x_15) x_15)))", "4v6jkoyf6FiTATcT05JoYQ8b", 23, Seq("bonus", "and", "if0", "not", "or", "shl1", "shr1", "shr4", "xor"))
,TrainingProblem("(lambda (x_15) (if0 (and (or (not 1) (if0 x_15 1 x_15)) 1) (xor (plus x_15 1) 1) (and x_15 (plus x_15 x_15))))", "apfgzsKDCyAI9gksHc0wEE09", 21, Seq("bonus", "and", "if0", "not", "or", "plus", "xor"))
,TrainingProblem("(lambda (x_4) (if0 (and (and (not (shr1 x_4)) (shr16 (not 0))) 1) (xor (plus 1 x_4) 1) (or (plus x_4 (not (shr16 x_4))) x_4)))", "AUFtWkCm16HxDwLrf0Sx96VL", 23, Seq("bonus", "and", "if0", "not", "or", "plus", "shr1", "shr16", "xor"))
,TrainingProblem("(lambda (x_17) (if0 (and (or x_17 (shr16 (shr1 (shr4 (shr1 x_17))))) 1) (or (shl1 (not 1)) x_17) (xor (shl1 (or 1 (shr4 x_17))) x_17)))", "QLuNTxWhkkeG3QfJMfLZoAgf", 23, Seq("bonus", "and", "if0", "not", "or", "shl1", "shr1", "shr16", "shr4", "xor"))
,TrainingProblem("(lambda (x_9) (if0 (and (plus (shr16 (shr16 (shl1 x_9))) (shr16 x_9)) 1) (plus x_9 (shl1 (and (shr4 x_9) x_9))) (plus 1 (plus x_9 x_9))))", "yDvL8M6pclo3cc4nBUPZdkkH", 23, Seq("bonus", "and", "if0", "plus", "shl1", "shr16", "shr4"))

scala> res35.toSeq.sortBy(_.size).map(x => (x.size, x.operators.size)).foreach(println)
(19,7)
(19,9)
(19,9)
(19,8)
(19,8)
(19,9)
(19,10)
(19,8)
(19,7)
(19,7)
(19,6)
(19,7)
(19,8)
(19,7)
(19,8)
(19,7)
(19,8)
(19,8)
(19,7)
(20,9)
(20,6)
(20,9)
(20,7)
(20,6)
(20,9)
(20,10)
(20,9)
(20,9)
(20,9)
(21,6)
(21,9)
(21,10)
(21,8)
(21,9)
(21,9)
(21,8)
(21,7)
(21,8)
(21,8)
(21,9)
(21,9)
(21,7)
(21,10)
(21,8)
(21,9)
(21,9)
(21,7)
(21,8)
(21,7)
(21,7)
(21,10)
(21,9)
(21,9)
(21,7)
(21,8)
(21,8)
(21,10)
(21,9)
(21,10)
(21,10)
(21,9)
(21,10)
(21,8)
(21,10)
(21,11)
(21,8)
(21,10)
(21,8)
(21,8)
(21,9)
(21,9)
(21,10)
(21,8)
(21,8)
(21,8)
(21,9)
(21,8)
(21,11)
(21,7)
(21,6)
(21,8)
(21,10)
(21,8)
(21,9)
(21,8)
(21,9)
(21,9)
(21,9)
(21,9)
(22,10)
(22,9)
(22,10)
(22,10)
(22,9)
(22,8)
(22,9)
(22,9)
(22,10)
(23,8)
(23,9)
(23,8)
(23,8)
(23,10)
(23,9)
(23,9)
(23,9)
(23,10)
(23,9)
(23,10)
(23,9)
(23,8)
(23,9)
(23,8)
(23,10)
(23,7)
(23,11)
(23,9)
(23,10)
(23,8)
(23,9)
(23,10)
(23,7)
(23,9)
(23,9)
(23,7)
(23,8)
(23,9)
(23,8)
(23,9)
(23,7)
(23,10)
(23,9)
(23,9)
(23,11)
(23,8)
(23,7)
(23,9)
(23,8)
(23,9)
(23,8)
(23,8)
(23,7)
(23,8)
(23,10)
(23,7)
(23,10)
(23,9)
(23,8)
(23,8)
(23,9)
(23,8)
(23,7)
(23,9)
(23,9)
(23,9)
(23,11)
(23,7)
(23,10)
(23,7)
(23,8)
(23,9)
(23,8)
(23,8)
(23,8)
(23,9)
(23,9)
(23,9)
(23,8)
(23,7)
(23,9)
(23,10)
(23,9)
(23,10)
(23,10)
(23,7)
(23,9)
(24,8)
(24,8)
(24,9)
(24,7)
(24,9)
(25,9)
(25,6)
(25,11)
(25,7)
(25,10)
(25,8)
(25,8)
(25,6)
(25,10)
(25,9)
(25,9)
(25,9)
(25,8)
(25,9)
(25,9)
(25,9)
(25,10)
(25,10)
(25,8)
(31,10)
(33,7)
(34,10)
(35,10)
(35,11)
(35,10)
(36,11)
(36,10)
(36,10)
(36,10)
(36,9)
(37,9)
(37,9)
(37,11)
(37,9)
(37,8)
(38,9)
(39,9)
(39,10)
(39,7)
(39,9)
(39,11)
(39,11)
(39,11)
(39,10)
(39,9)
(39,10)
(39,10)
(39,9)
(39,10)
(39,11)
(39,10)
(39,11)
(39,10)
(39,9)
(39,10)
(39,9)
(39,11)
(39,9)
(39,9)
(39,8)
(39,10)
(39,11)
(39,11)
(39,10)
(39,11)
(39,9)
(39,10)
(39,9)
(39,9)
(39,11)
(39,11)
(39,10)
(39,10)
(39,10)
(39,9)
(39,10)
(40,9)
(40,10)
(40,10)
(40,10)
(40,11)
(40,9)
(40,10)
(40,9)
(40,11)
(40,10)
(40,10)
(40,11)
(40,11)
(40,11)
(41,9)
(41,9)
(41,10)
(41,9)
(41,8)
(42,11)
(43,11)
(43,11)
(43,10)
(43,9)
(43,11)
(43,8)
(43,8)
(43,10)
(43,11)
(43,11)
(43,11)
(43,10)
(43,11)
(43,10)
(43,10)
(43,10)
(43,10)
(43,11)
(43,10)
(43,9)
(43,11)
(43,9)
(43,10)
(43,11)
(43,11)
(43,10)
(43,11)
(43,11)
(43,10)
(43,11)
(43,11)
(43,10)
(43,9)
(43,10)
(43,11)
(43,8)
(43,9)
(43,11)
(43,10)
(43,11)
(43,10)
(43,9)
(43,11)
(43,8)
(43,10)
(43,10)
(43,10)
(43,10)
(43,10)
(43,10)
(43,10)
(43,11)
(43,10)
(43,9)
(43,11)
(43,11)
(43,10)
(43,10)
(43,11)
(43,11)
(43,11)
(43,11)
(43,10)
(43,10)
(43,9)
(43,11)
(43,10)
(43,10)
(43,10)
(43,8)
(43,10)
(43,10)
(43,11)
(43,10)
(43,10)
(43,11)
(43,9)
(43,10)
(43,11)
(43,9)
(43,11)
(43,10)
(43,11)
(43,10)
(43,11)
(43,10)
(43,10)
(43,10)
(43,10)
(43,11)
(43,10)
(43,11)
(43,9)
(43,10)
(43,10)
(43,11)
(43,9)
(43,10)
(43,10)
(43,10)
(43,9)
(43,10)
(43,11)
(43,10)
(43,9)
(43,10)
(43,11)
(43,9)
(43,11)
(43,11)
(43,10)
(43,11)
(43,11)
(43,10)
(43,11)
(43,10)
(43,8)
(43,9)
(43,10)
(43,10)
(43,10)
(43,10)
(43,10)
